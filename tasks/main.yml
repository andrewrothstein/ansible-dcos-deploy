---
- name: install dep pkgs
  with_items:
    - tar
    - xz
    - unzip
    - curl
    - ipset
  become: yes
  become_user: root
  package: name={{item}} state=present

- name: add nogroup group
  become: yes
  become_user: root
  group: name=nogroup state=present
  
- name : mkdir /tmp/dcos
  file: >-
    path=/tmp/dcos
    state=directory
    mode=0755
- name: download dcos_install.sh
  get_url: >-
    url={{ dcos_bootstrap_url }}/dcos_install.sh
    dest=/tmp/dcos/dcos_install.sh
    mode=0755
    use_proxy=no

- name: deploy masters...
  become: True
  become_user: root
  ignore_errors: yes
  when: >-
    '{{dcos_bootstrap_master_group}}' in group_names
  command: ./dcos_install.sh master
  args:
    chdir: /tmp/dcos

- name: deploy private agents...
  become: True
  become_user: root
  ignore_errors: yes
  when: >-
    '{{dcos_bootstrap_private_agent_group}}' in group_names
  command: ./dcos_install.sh slave
  args:
    chdir: /tmp/dcos

- name: deploy public agents...
  become: True
  become_user: root
  ignore_errors: yes
  when: >-
    '{{dcos_bootstrap_public_agent_group}}' in group_names
  command: ./dcos_install.sh slave_public
  args:
    chdir: /tmp/dcos

- name: proxify...
  when: proxy_env.http_proxy is defined
  become: yes
  become_user: root
  register: dcos_deploy_proxified
  with_items:
    - var/lib/dcos/environment.proxy
    - var/lib/dcos/mesos-slave-common
  template: >-
    src={{item}}.j2
    dest=/{{item}}
    mode=0644
- name: >
    additional no_proxy setting to prevent IP based HTTP traffic
    from getting swallowed by the proxy
  when: proxy_env.no_proxy is defined
  become: yes
  become_user: root
  blockinfile:
    dest: /opt/mesosphere/environment
    block: |
      no_proxy="{{dcos_deploy_no_proxy}}"
      NO_PROXY="{{dcos_deploy_no_proxy}}"

- name: restart services to reflect proxy changes
  with_items:
    - dcos-mesos-dns
  when: proxy_env.no_proxy is defined
  become: yes
  become_user: root
  service: name={{item}} state=restarted
    
- name: restart proxified master/dcos-cosmos service
  when: >-
    dcos_deploy_proxified.changed
    and '{{dcos_bootstrap_master_group}}' in group_names
  become: yes
  become_user: root
  with_items:
    - dcos-cosmos
  service: name={{item}} state=restarted

- name: restart proxified private agent / dcos-mesos-slave service
  when: >-
    dcos_deploy_proxified.changed
    and '{{dcos_bootstrap_private_agent_group}}' in group_names
  become: yes
  become_user: root
  with_items:
    - dcos-mesos-slave
  service: name={{item}} state=restarted

- name: restart proxified public agent / dcos-mesos-slave-public service
  when: >-
    dcos_deploy_proxified.changed
    and '{{dcos_bootstrap_public_agent_group}}' in group_names
  become: yes
  become_user: root
  with_items:
    - dcos-mesos-slave-public
  service: name={{item}} state=restarted
